name: CD

on:
  push:
    branches:
     - master
     - main

jobs:

  coverage:
    name: Deploy Coverage Results
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Conda with Python 3.9
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.9
          auto-activate-base: false

      - name: Install Package Dependencies
        shell: bash -l {0}
        run: |
          python --version
          python -m pip install --upgrade pip
          python -m pip install nose nose-exclude coverage pycodestyle

      - name: Run Tests
        shell: bash -l {0}
        run: |
          python setup.py nosetests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          flags: unittests

api:
  name: Deploy API Documentation
  needs: coverage
  runs-on: ubuntu-latest
  if: success()

  env:
    gh_root: https://github.com/CEA-COSMIC/
    tag_path: /archive/refs/tags/
    plugins: pysap-astro==v0.0.1 pysap-etomo==v0.0.1 pysap-mri==v0.4.0
    sphinx_opts: -t docs/_templates -feTMo docs/source

  steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Conda with Python 3.9
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: 3.9
        auto-activate-base: false

    - name: Install dependencies
      shell: bash -l {0}
      run: |
        conda install -c conda-forge pandoc
        python -m pip install --upgrade pip
        python -m pip install -r docs/requirements.txt
        python -m pip install .

    - name: Download plug-ins
      shell: bash -l {0}
      run: |
        for _plugin in ${plugins}; do
          plugin_name="$(echo ${_plugin} | awk -F== '{print $1}')"
          plugin_version="$(echo ${_plugin} | awk -F== '{print $2}')"
          wget ${gh_root}${plugin_name}${tag_path}${plugin_version}.tar.gz -O ${plugin_name}.tar.gz
        done
        for file in *.tar.gz; do tar xzf "$file"; done
        rm *.tar.gz

    - name: Build API documentation
      shell: bash -l {0}
      run: |
        sphinx-apidoc ${sphinx_opts} pysap
        for _plugin in ${plugins}; do
          plugin_name="$(echo ${_plugin} | awk -F== '{print $1}')"
          package_name="$(echo ${plugin_name} | awk -F- '{print $2}')"
          sphinx-apidoc ${sphinx_opts} ${plugin_name}-*/${package_name}
        done
        sphinx-build -E docs/source docs/_build

    - name: Deploy API documentation
      uses: peaceiris/actions-gh-pages@v3.5.9
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/_build
