language: python
sudo: required

matrix:
    include:
        - os: linux
          dist: xenial
          python: 3.5
        - os: linux
          dist: xenial
          python: 3.6
        - os: linux
          dist: xenial
          python: 3.7
        - os: linux
          dist: xenial
          python: 3.8
        - os: osx
          osx_image: xcode11.3
          language: shell
          env: PYTHON_VERSION=3.5
        - os: osx
          osx_image: xcode11.3
          language: shell
          env: PYTHON_VERSION=3.6
        - os: osx
          osx_image: xcode11.3
          language: shell
          env: PYTHON_VERSION=3.7
        - os: osx
          osx_image: xcode11.3
          language: shell
          env: PYTHON_VERSION=3.8

before_install:
    - if [ $TRAVIS_OS_NAME = 'linux' ]; then sudo apt-get update; fi
    - if [ $TRAVIS_OS_NAME = 'linux' ]; then sudo updatedb; fi
    - if [ $TRAVIS_OS_NAME = 'osx' ];
      then curl https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o miniconda.sh;
      else wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi
    - if [ $TRAVIS_PYTHON_VERSION == "3.5" ]; then
        export CPLUS_INCLUDE_PATH=/opt/python/3.5.6/include/python3.5m;
      fi
    - if [ $TRAVIS_PYTHON_VERSION == "3.6" ]; then
        export CPLUS_INCLUDE_PATH=/opt/python/3.6.3/include/python3.6m;
      fi
    - if [ $TRAVIS_PYTHON_VERSION == "3.7" ]; then
        export CPLUS_INCLUDE_PATH=/opt/python/3.7.1/include/python3.7m;
      fi
    - if [ $TRAVIS_PYTHON_VERSION == "3.8" ]; then
        export CPLUS_INCLUDE_PATH=/opt/python/3.8.0/include/python3.8m;
      fi
    - chmod +x miniconda.sh
    - ./miniconda.sh -b -p $HOME/miniconda
    - export PATH=$HOME/miniconda/bin:$PATH
    - hash -r
    - if [ $TRAVIS_OS_NAME = 'osx' ];
      then conda update conda;
      else conda update --all -y;
      fi
    - conda info -a
    - if [ $TRAVIS_OS_NAME = 'linux' ]; then sudo apt install -y libnfft3-dev; fi

install:
    - if [ $TRAVIS_OS_NAME = 'osx' ];
      then conda create -n testenv --yes pip python=$PYTHON_VERSION;
      else conda create -n testenv --yes pip python=$TRAVIS_PYTHON_VERSION;
      fi
    - source activate testenv
    - pip install --upgrade pip
    - python --version
    - pip --version
    - locate pyconfig.h
    - mkdir -p $HOME/.local/share/pysap
    - git clone https://github.com/CEA-COSMIC/pysap-data.git $HOME/.local/share/pysap/pysap-data
    - ln -s $HOME/.local/share/pysap/pysap-data/pysap-data/* $HOME/.local/share/pysap
    - rm $HOME/.local/share/pysap/__init__.py
    - ls -l $HOME/.local/share/pysap
    - pip install cython
    - pip install git+https://github.com/ghisvail/pyNFFT.git
    - pip install nose nose-exclude coverage coveralls pycodestyle
    - pip install -b $TRAVIS_BUILD_DIR/build -t $TRAVIS_BUILD_DIR/install --no-clean --no-deps .
    - ls $TRAVIS_BUILD_DIR/install
    - ldd $TRAVIS_BUILD_DIR/install/pysparse.so
    - export PYTHONPATH=$TRAVIS_BUILD_DIR/install:$PYTHONPATH
    - if [ $TRAVIS_PYTHON_VERSION == "3.5" ]; then
        export PATH=$PATH:$TRAVIS_BUILD_DIR/build/temp.linux-x86_64-3.5/extern/bin;
      fi
    - if [ $TRAVIS_PYTHON_VERSION == "3.6" ]; then
        export PATH=$PATH:$TRAVIS_BUILD_DIR/build/temp.linux-x86_64-3.6/extern/bin;
      fi
    - if [ $TRAVIS_PYTHON_VERSION == "3.7" ]; then
        export PATH=$PATH:$TRAVIS_BUILD_DIR/build/temp.linux-x86_64-3.7/extern/bin;
      fi
    - if [ $TRAVIS_PYTHON_VERSION == "3.8" ]; then
        export PATH=$PATH:$TRAVIS_BUILD_DIR/build/temp.linux-x86_64-3.8/extern/bin;
      fi

script:
    - python setup.py nosetests
    - pycodestyle pysap --ignore="E121,E123,E126,E226,E24,E704,E402,E731,E722,E741,W503,W504,W605"
    - pycodestyle examples --ignore="E121,E123,E126,E226,E24,E704,E402,E731,E741,W503,W504,W605"

after_success:
    - coveralls
